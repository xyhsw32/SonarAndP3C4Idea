<!--

    SonarLint for IntelliJ IDEA
    Copyright (C) 2015-2021 SonarSource
    sonarlint@sonarsource.com

    This program is free software; you can redistribute it and/or
    modify it under the terms of the GNU Lesser General Public
    License as published by the Free Software Foundation; either
    version 3 of the License, or (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
    Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public
    License along with this program; if not, write to the Free Software
    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02

-->
<idea-plugin url="https://www.sonarlint.org" require-restart="true">
    <id>org.sonarlint.idea</id>
    <name>SonarLint</name>
    <version>${project.version}</version>
    <vendor url="https://www.sonarsource.com">SonarSource</vendor>

    <description><![CDATA[
        <html>
            <p>
                SonarLint is a free IDE extension that lets you fix bugs and vulnerabilities as you write code!
                Like a spell checker, SonarLint highlights coding issues on the fly, with clear remediation
                guidance so you can fix them before the code is even committed. Across popular IDEs (Eclipse,
                IntelliJ, Visual Studio, VS Code) and popular programming languages, SonarLint helps all developers
                write better and safer code!
            </p>
            <br/>
            <p>
                SonarLint supports all JetBrains IDE, including IntelliJ, WebStorm, PhpStorm, PyCharm and RubyMine.
                It can analyze code written in Java, JavaScript, TypeScript, Python, Kotlin, Ruby, HTML & PHP.
            </p>
            <br/>
            <p>
                If your project is analyzed on SonarQube or on SonarCloud, SonarLint can connect to 
                the server to retrieve the appropriate quality profiles and settings for that project. Java 8 
                is required to run SonarLint; analysis of JavaScript and TypeScript requires Node.js >= 8.
            </p>
        </html>
      ]]></description>

    <change-notes><![CDATA[
      <ul>
        <li>4.14.2 - Fix exceptions thrown during analysis and work around an issue with latest EAP.</li>
        <li>4.14.1 - Fix an error occurring after each analysis. Fix the regression on UI responsiveness.</li>
        <li>4.14 - New rules for regexp in Java, Java 15 support. All JS rules now based on the TypeScript parser. Rules improvements for PHP and Python. Support for Ruby 3.0.0. Support of Python 3.9. Investigate taint vulnerabilities detected by SonarQube 8.6+ or SonarCloud.</li>
        <li>4.13 - New or improved rules for access control or authentication in Java. Security rules for JS/TS. Support of PHP 8, improved rules. Updated Kotlin and Ruby analyzers, supporting latest language features and improved rules. Updated HTML analyzer with improved rules. Reworked server notifications. Review a Security Hotspot within its context.</li>
        <li>4.12 - Lots of new rules for Java (including test code), support analysis of Java 14. 20 new rules for PHP, including 13 related to unit tests. 2 new rules for JavaScript. 3 new rules for Python. Bug fixes and improvements.</li>
        <li>4.11 - Improve issues, flows and secondary locations navigation and highlighting. Show secondary location indexes in the editor. Add 'Show rule description' and 'Show data flow/issue locations' contextual actions. Relax search criteria in rule configuration filter. Show effective rule parameter in the rule description panel. Bug fixes and improvements.</li>
        <li>4.10 - Fix duplicated annotations for PHP files. Display rule severity defined in the quality profile in connected mode. Fix analysis failure with JSP files. Bug fixes and improvements for JS files. 4 new rules (3 security related), bug fixes and improvements for PHP files.</li>
        <li>4.9 - Many new rules about JUnit and AssertJ for Java test files. 10 new rules for PHP. 22 new rules for Python and support of Typeshed packages. Preparatory changes for dynamic plugin installation.</li>
        <li>4.8 - Configure rule parameters in IDE settings. Performance improvement and fewer false positives for PHP. 4 new vulnerability detection rules for Python.</li>
        <li>4.7 - 2 new rules and performance improvements for Java. 2 new rules for Python.</li>
        <li>4.6 - Enable analysis of TypeScript. 27 new rules for Python. Support for Python 3.8.</li>
        <li>4.5.1 - Fix two regressions causing exception during analysis.</li>
        <li>4.5 - 3 new rules and engine improvements for Python. New engine for Java, with support for Java 13 preview features.</li>
        <li>4.4 - Ensure compatibility with JetBrains 2020.x release train. 22 new rules and engine improvements for Python. Support for PHP 7.4. New engine for JavaScript, 8 new rules.</li>
        <li>4.3 - Supports SonarJS 6.x in connected mode. Updated issue type icons.</li>
        <li>4.2 - Analyze HTML in Vue.js single file components. 8 new HTML rules. Support 'Ignore Issues on Files' and 'Ignore Issues in Blocks' in connected mode.</li>
        <li>4.1.1 - Fix regression on quality profile in connected mode</li>
        <li>4.1 - Enable analysis of HTML. Add support of XML in connected mode. 10 new Java rules.</li>
        <li>4.0.2 - Fix error on startup registering actions affecting all IDEs other than IntelliJ</li>
        <li>4.0.1 - Fix duplicated highlighting in WebStorm and connection to a server with more than 10k rules</li>
        <li>4.0 - Improved matching of issues with SonarQube</li>
        <li>3.5.1 - Fixed error with read access and repeated annotations</li>
        <li>3.5 - Manage rules when not connected to SonarQube or SonarCloud</li>
        <li>3.4.2 - Fix a regression in the SonarQube server configuration wizard</li>
        <li>3.4.1 - Fix of several bugs: binding to SonarCloud organizations, support of Java 10, rendering of rule descriptions</li>
        <li>3.4 - Update of embedded code analyzers. Fix analysis of files located outside of the project base directory</li>
        <li>3.3 - Numerous improvements and UX enhancements.</li>
        <li>3.2.1 - Bug fix for concurrent modification when all files of a module are excluded by server configuration</li>
        <li>3.2 - Support excluding files from the automatic analysis</li>
        <li>3.1 - Various minor improvements and bug fixes. Updated code analyzers.</li>
        <li>3.0 - Avoid saving files when possible. Improve support of cancellation</li>
        <li>2.10 - Support of SonarQube organizations</li>
        <li>2.9 - New code analyzers included in standalone mode. Collection of usage statistics</li>
        <li>2.8 - Analyze all files in project. New icons for issue types</li>
        <li>2.7 - Display of secondary locations of issues</li>
        <li>2.6 - Support of SSL certificates configured in IntelliJ</li>
        <li>2.5 - Analysis of VCS changed files and notifications about binding update</li>
        <li>2.4.3 - Bug fix for multi-module projects on Windows</li>
        <li>2.4.2 - Fix resolved issues on windows and authentication</li>
        <li>2.4.1 - Bug fix of Javascript in standalone mode.</li>
        <li>2.4 - Hide issues that are resolved in SonarQube. Numerous bug fixes.</li>
        <li>2.3.2 - Fix configuration of automatic trigger of analysis</li>
        <li>2.3.1 - Bug fix for analysis configuration and performance improvements</li>
        <li>2.3 - Support of exclusions in connected mode; Numerous bug fixes. Java 8 is now required to run SonarLint.</li>
        <li>2.2 - Support of SonarQube LTS (4.5) and commercial plugins</li>
        <li>2.1.1 - Bug fix for PHPStorm</li>
        <li>2.1 - Various improvements and bug fixes</li>
        <li>2.0.2 - Bug fix SLI-73</li>
        <li>2.0.1 - Bug fixes</li>
        <li>2.0 - Connect to a SonarQube server;</li>
        <li>1.5 - Display SonarLint markers age;</li>
        <li>1.4 - No internet required; Several bug fixes;</li>
        <li>1.3 - Issues views; UI improvements;</li>
        <li>1.2 - Automatic trigger of analysis; "NO SONAR" quick fix; configurable highlighting of issues;</li>
        <li>1.1 - More precise issue location; trigger of analysis changed to on demand only; improved SonarLint console;</li>
        <li>1.0 - On the fly SonarLint inspection</li>
      </ul>
      ]]>
    </change-notes>

    <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/build_number_ranges.html for description -->
    // we need listeners registration
    <idea-version since-build="183.4588.3"/>

    <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/plugin_compatibility.html
         on how to target different products -->
    <depends>com.intellij.modules.lang</depends>
    <depends optional="true" config-file="plugin-java.xml">com.intellij.modules.java</depends>
    <depends optional="true" config-file="plugin-p3c.xml">com.intellij.modules.java</depends>
    <extensions defaultExtensionNs="com.intellij">
        <codeInsight.linkHandler prefix="#sonarissue/" handlerClass="org.sonarlint.intellij.editor.SonarLinkHandler"/>
        <toolWindow id="SonarLint" anchor="bottom" icon="/images/ico-sonarlint-13.png" factoryClass="org.sonarlint.intellij.ui.SonarLintToolWindowFactory" canCloseContents="true"/>
        <applicationConfigurable groupId="tools" id="sonarlint" displayName="SonarLint" instance="org.sonarlint.intellij.config.global.SonarLintGlobalConfigurable"/>
        <projectConfigurable parentId="sonarlint" displayName="Project Settings" instance="org.sonarlint.intellij.config.project.SonarLintProjectConfigurable" nonDefaultProject="true"/>
        <moduleConfigurable id="SonarLint" displayName="SonarLint" instance="org.sonarlint.intellij.config.module.SonarLintModuleConfigurable"/>
        <colorSettingsPage implementation="org.sonarlint.intellij.config.SonarLintColorSettingsPage"/>
        <checkinHandlerFactory implementation="org.sonarlint.intellij.trigger.SonarLintCheckinHandlerFactory"/>
        <additionalTextAttributes scheme="Default" file="colorSchemes/SonarLintDefault.xml"/>
        <additionalTextAttributes scheme="Darcula" file="colorSchemes/SonarLintDarcula.xml"/>
        <editorActionHandler action="EditorEscape" implementationClass="org.sonarlint.intellij.editor.EscapeHandler"/>
        <projectService serviceImplementation="org.sonarlint.intellij.editor.EditorDecorator"/>
        <projectService serviceImplementation="org.sonarlint.intellij.ui.BalloonNotifier"/>
        <projectService serviceImplementation="org.sonarlint.intellij.actions.SonarLintToolWindow"/>
        <errorHandler implementation="org.sonarlint.intellij.errorsubmitter.BlameSonarSource"/>

        <!-- BE CAREFUL to not register the annotator twice for the same language (taking into account inheritance) or the annotation will appear multiple times -->
        <externalAnnotator language="JAVA" implementationClass="org.sonarlint.intellij.editor.SonarExternalAnnotator"/>
        <externalAnnotator language="kotlin" implementationClass="org.sonarlint.intellij.editor.SonarExternalAnnotator"/>
        <externalAnnotator language="Python" implementationClass="org.sonarlint.intellij.editor.SonarExternalAnnotator"/>
        <externalAnnotator language="PHP" implementationClass="org.sonarlint.intellij.editor.SonarExternalAnnotator"/>
        <!-- JavaScript is the base language for TypeScript, EcmaScript, jsx, ...-->
        <externalAnnotator language="JavaScript" implementationClass="org.sonarlint.intellij.editor.SonarExternalAnnotator"/>
        <externalAnnotator language="ruby" implementationClass="org.sonarlint.intellij.editor.SonarExternalAnnotator"/>
        <!-- XML is the base language for HTML, XHTML, ...-->
        <externalAnnotator language="XML" implementationClass="org.sonarlint.intellij.editor.SonarExternalAnnotator"/>
        <externalAnnotator language="Scala" implementationClass="org.sonarlint.intellij.editor.SonarExternalAnnotator"/>
        <externalAnnotator language="Swift" implementationClass="org.sonarlint.intellij.editor.SonarExternalAnnotator"/>

        <applicationService serviceImplementation="org.sonarlint.intellij.config.global.SonarLintGlobalSettingsStore"/>
        <applicationService serviceImplementation="org.sonarlint.intellij.core.SonarLintEngineManager"/>
        <applicationService serviceImplementation="org.sonarlint.intellij.SonarLintPlugin"/>
        <applicationService serviceInterface="org.sonarlint.intellij.util.GlobalLogOutput"
                            serviceImplementation="org.sonarlint.intellij.util.GlobalLogOutputImpl"
                            testServiceImplementation="org.sonarlint.intellij.util.GlobalLogOutputTestImpl"/>
        <applicationService serviceImplementation="org.sonarlint.intellij.util.SonarLintActions"/>
        <applicationService serviceInterface="org.sonarlint.intellij.telemetry.SonarLintTelemetry"
                            serviceImplementation="org.sonarlint.intellij.telemetry.SonarLintTelemetryImpl" />
        <applicationService serviceImplementation="org.sonarlint.intellij.core.ServerNotificationsService"/>
        <applicationService serviceImplementation="org.sonarlint.intellij.core.NodeJsManager"/>
        <applicationService serviceImplementation="org.sonarlint.intellij.server.SonarLintHttpServer"/>

        <projectService serviceImplementation="org.sonarlint.intellij.core.ProjectBindingManager"/>
        <projectService serviceImplementation="org.sonarlint.intellij.config.project.SonarLintProjectSettingsStore"/>
        <projectService serviceImplementation="org.sonarlint.intellij.core.SonarLintProjectNotifications"/>
        <projectService serviceInterface="org.sonarlint.intellij.ui.SonarLintConsole"
                        serviceImplementation="org.sonarlint.intellij.ui.SonarLintConsoleImpl"
                        testServiceImplementation="org.sonarlint.intellij.ui.SonarLintConsoleTestImpl"/>
        <projectService serviceImplementation="org.sonarlint.intellij.analysis.SonarLintJobManager"/>
        <projectService serviceImplementation="org.sonarlint.intellij.core.ProjectServerNotificationsSubscriber"/>
        <projectService serviceImplementation="org.sonarlint.intellij.issue.IssueStore"/>
        <projectService serviceImplementation="org.sonarlint.intellij.editor.CodeAnalyzerRestarter"/>
        <projectService serviceImplementation="org.sonarlint.intellij.issue.persistence.IssuePersistence"/>
        <projectService serviceImplementation="org.sonarlint.intellij.config.project.SonarLintProjectState"/>
        <projectService serviceImplementation="org.sonarlint.intellij.issue.IssueManager"/>
        <projectService serviceImplementation="org.sonarlint.intellij.issue.IssueProcessor"/>
        <projectService serviceImplementation="org.sonarlint.intellij.analysis.SonarLintStatus"/>
        <projectService serviceImplementation="org.sonarlint.intellij.trigger.EditorChangeTrigger"/>
        <projectService serviceImplementation="org.sonarlint.intellij.analysis.SonarLintAnalyzer"/>
        <projectService serviceImplementation="org.sonarlint.intellij.core.ServerIssueUpdater"/>
        <projectService serviceImplementation="org.sonarlint.intellij.core.UpdateChecker"/>
        <projectService serviceImplementation="org.sonarlint.intellij.issue.vulnerabilities.TaintVulnerabilitiesPresenter"/>
        <projectService serviceImplementation="org.sonarlint.intellij.issue.vulnerabilities.TaintVulnerabilitiesRefreshTrigger"/>

        <moduleService serviceImplementation="org.sonarlint.intellij.core.ModuleBindingManager"/>
        <moduleService serviceImplementation="org.sonarlint.intellij.config.module.SonarLintModuleSettingsStore"/>
        
        <postStartupActivity implementation="org.sonarlint.intellij.BootstrapStartupActivity"/>
        <postStartupActivity implementation="org.sonarlint.intellij.trigger.EditorOpenTrigger"/>
        <projectService serviceImplementation="org.sonarlint.intellij.trigger.SonarLintSubmitter"/>
        <executor implementation="org.sonarlint.intellij.executor.RunExecutor"/>
        <programRunner implementation="org.sonarlint.intellij.runner.RunCodeRunner"/>
    </extensions>

    <extensionPoints>
        <extensionPoint name="AnalysisConfiguration" interface="org.sonarlint.intellij.analysis.AnalysisConfigurator" dynamic="true"/>
    </extensionPoints>

    <actions>
        <!-- Some actions are defined in SonarLintActions so that they aren't registered in ActionManager -->
        <group id="SonarLint.AnalyzeMenu" text="SonarLint" popup="false" icon="/images/ico-sonarlint-13.png">
            <separator/>
            <!-- This group is programmatically added to AnalyzeMenu if it exists -->
        </group>

        <action id="SonarLint.AnalyzeFiles"
                class="org.sonarlint.intellij.actions.SonarAnalyzeFilesAction"
                text="Analyze with SonarLint"
                description="Run SonarLint analysis on selected file(s)"
                icon="SonarLintIcons.SONARLINT">
            <keyboard-shortcut first-keystroke="shift ctrl S" keymap="$default"/>
            <add-to-group group-id="EditorPopupMenu" anchor="last"/>
            <add-to-group group-id="SonarLint.AnalyzeMenu"/>
        </action>

        <group id="SonarLint.ProjectViewPopupMenu" text="SonarLint" popup="true" icon="/images/ico-sonarlint-13.png">
            <reference ref="SonarLint.AnalyzeFiles"/>
            <action id="SonarLint.Exclude"
                    class="org.sonarlint.intellij.actions.ExcludeFileAction"
                    text="Exclude from SonarLint analysis"
                    description="Adds resources to the list exclusions in the SonarLint project settings"
                    icon="SonarLintIcons.SONARLINT">
            </action>
            <add-to-group group-id="ProjectViewPopupMenu"/>
        </group>

        <action id="SonarLint.AnalyzeChangedFiles"
                class="org.sonarlint.intellij.actions.SonarAnalyzeChangedFilesAction"
                text="Analyze VCS Changed Files with SonarLint"
                description="Run a SonarLint analysis on VCS changed files"
                icon="SonarLintIcons.SONARLINT">
            <add-to-group group-id="SonarLint.AnalyzeMenu"/>
        </action>

        <action id="SonarLint.AnalyzeAllFiles"
                class="org.sonarlint.intellij.actions.SonarAnalyzeAllFilesAction"
                text="Analyze All Files with SonarLint"
                description="Run a SonarLint analysis on all files in the project"
                icon="SonarLintIcons.SONARLINT">
            <add-to-group group-id="SonarLint.AnalyzeMenu"/>
        </action>

        <action id="SonarLint.toolwindow.Cancel"
                class="org.sonarlint.intellij.actions.SonarCancelAction"
                text="Cancel SonarLint Analysis"
                description="Cancel the SonarLint analysis running"
                icon="SonarLintIcons.SUSPEND">
        </action>

        <action id="SonarLint.toolwindow.Analyzers"
                class="org.sonarlint.intellij.actions.SonarShowCodeAnalyzers"
                text="Show more information"
                description="Show more information"
                icon="SonarLintIcons.INFO">
        </action>


        <action id="SonarLint.toolwindow.Configure"
                class="org.sonarlint.intellij.actions.SonarConfigureProject"
                text="Configure SonarLint"
                description="Configure SonarLint"
                icon="SonarLintIcons.TOOLS">
        </action>

    </actions>

</idea-plugin>
